version: "3.9"


services:
  mongodb:
    image: lcampos01/practica_creativa_docker-mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"

  zookeeper:
    image: lcampos01/practica_creativa_docker-zookeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"



  kafka:
    image: lcampos01/practica_creativa_docker-k8s-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    depends_on:
      - zookeeper


  spark-master:
    image: lcampos01/practica_creativa_docker-k8s-spark-master:latest
    container_name: spark-master
    ports:
      - "7077:7077"
      - "8083:8080"

    depends_on:
      - kafka
      - mongodb

  spark-worker-1:
    image: lcampos01/practica_creativa_docker-k8s-spark-worker:latest
    container_name: spark-worker-1
    ports:
      - "8081:8081"
    depends_on:
      - spark-master
      
  spark-worker-2:
    image: lcampos01/practica_creativa_docker-k8s-spark-worker:latest
    container_name: spark-worker-2

    ports:
      - "8082:8081"
    depends_on:
      - spark-master


  spark-submit:
    image: lcampos01/practica_creativa_docker-k8s-spark-submit:latest
    container_name: spark-submit
    ports:
      - "4040:4040"
    depends_on:
      - spark-master
      - spark-worker-1
      - spark-worker-2


  flask-app:
    image: lcampos01/practica_creativa_docker-flask_app:latest
    container_name: flask-app
    ports:
      - "5000:5000"

    depends_on:
      - kafka
      - mongodb
      - spark-master
      - spark-worker-1
      - spark-worker-2

  airflow-init:
    image: lcampos01/practica_creativa_docker-airflow-init:latest
    container_name: airflow-init

    entrypoint: ["airflow", "db", "init"]  # Use the official Airflow command

    # Optional environment variables for user creation (if desired)
    environment:
      - AIRFLOW_USERNAME=admin
      - AIRFLOW_PASSWORD=admin
      - FIRST_NAME=Jack
      - LAST_NAME=Sparrow
      - ROLE=Admin
      - EMAIL=example@mail.org

  airflow-webserver:
    image: apache/airflow:2.1.4-python3.8
    container_name: airflow-webserver
    user: "0:0"
    environment:
      - AIRFLOW_HOME=/opt/airflow
      - PROJECT_HOME=/opt/airflow
      - AIRFLOW_CORE_LOAD_EXAMPLES=False
      - AIRFLOW_CORE_DAGS_FOLDER=/opt/airflow/dags
      - AIRFLOW_CORE_EXECUTOR=SequentialExecutor
    ports:
      - "8080:8080"
    volumes:
      - ./resources/airflow:/opt/airflow
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      bash -c "
        pip install -r /opt/airflow/requirements.txt -c /opt/airflow/constraints.txt &&
        airflow webserver --port 8080
      "
    depends_on:
      - airflow-init

  airflow-scheduler:
    image: apache/airflow:2.1.4-python3.8
    container_name: airflow-scheduler
    user: "0:0"
    environment:
      - AIRFLOW_HOME=/opt/airflow
      - PROJECT_HOME=/opt/airflow
      - AIRFLOW_CORE_LOAD_EXAMPLES=False
      - AIRFLOW_CORE_DAGS_FOLDER=/opt/airflow/dags
      - AIRFLOW_CORE_EXECUTOR=SequentialExecutor
      
    volumes:
      - ./resources/airflow:/opt/airflow
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      bash -c "
        pip install -r /opt/airflow/requirements.txt -c /opt/airflow/constraints.txt &&
        airflow scheduler
      "
    depends_on:
      - airflow-init